{"ast":null,"code":"import { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nlet RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, recipeService, router) {\n      this.route = route;\n      this.recipeService = recipeService;\n      this.router = router;\n      this.editMode = false;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n      });\n    }\n    onSubmit() {\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //   this.recipeForm.value['description'],\n      //   this.recipeForm.value['imagePath'],\n      //   this.recipeForm.value['ingredients']);\n      if (this.editMode) {\n        this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n      } else {\n        this.recipeService.addRecipe(this.recipeForm.value);\n      }\n      this.onCancel();\n    }\n    onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n    onDeleteIngredient(index) {\n      this.recipeForm.get('ingredients').removeAt(index);\n    }\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n    initForm() {\n      let recipeName = '';\n      let recipeImagePath = '';\n      let recipeDescription = '';\n      let recipeIngredients = new FormArray([]);\n      if (this.editMode) {\n        const recipe = this.recipeService.getRecipe(this.id);\n        recipeName = recipe.name;\n        recipeImagePath = recipe.imagePath;\n        recipeDescription = recipe.description;\n        if (recipe['ingredients']) {\n          for (let ingredient of recipe.ingredients) {\n            recipeIngredients.push(new FormGroup({\n              'name': new FormControl(ingredient.name, Validators.required),\n              'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n            }));\n          }\n        }\n      }\n      this.recipeForm = new FormGroup({\n        'name': new FormControl(recipeName, Validators.required),\n        'imagePath': new FormControl(recipeImagePath, Validators.required),\n        'description': new FormControl(recipeDescription, Validators.required),\n        'ingredients': recipeIngredients\n      });\n    }\n  }\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 1,\n    vars: 0,\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"./recipe-edit.component.html\");\n      }\n    },\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return RecipeEditComponent;\n})();\nexport { RecipeEditComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}